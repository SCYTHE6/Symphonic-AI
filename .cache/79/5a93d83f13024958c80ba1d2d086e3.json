{"id":"ya0i","dependencies":[{"name":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\interaction\\interactiveTarget.js.map","includedInParent":true,"mtime":1674916213259},{"name":"C:\\Github\\Symphonic-AI\\package.json","includedInParent":true,"mtime":1724703272135},{"name":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\package.json","includedInParent":true,"mtime":1674916212608}],"generated":{"js":"\"use strict\";exports.__esModule=!0,exports.default={interactive:!1,interactiveChildren:!0,hitArea:null,get buttonMode(){return\"pointer\"===this.cursor},set buttonMode(t){t?this.cursor=\"pointer\":\"pointer\"===this.cursor&&(this.cursor=null)},cursor:null,get trackedPointers(){return void 0===this._trackedPointers&&(this._trackedPointers={}),this._trackedPointers},_trackedPointers:void 0};"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":16,"column":15},"generated":{"line":1,"column":51}},{"source":"../../src/interaction/interactiveTarget.js","name":"interactive","original":{"line":31,"column":4},"generated":{"line":1,"column":52}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":31,"column":17},"generated":{"line":1,"column":65}},{"source":"../../src/interaction/interactiveTarget.js","name":"interactiveChildren","original":{"line":40,"column":4},"generated":{"line":1,"column":67}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":40,"column":25},"generated":{"line":1,"column":88}},{"source":"../../src/interaction/interactiveTarget.js","name":"hitArea","original":{"line":53,"column":4},"generated":{"line":1,"column":90}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":53,"column":13},"generated":{"line":1,"column":98}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":66,"column":4},"generated":{"line":1,"column":103}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":68,"column":8},"generated":{"line":1,"column":120}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":68,"column":31},"generated":{"line":1,"column":126}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":68,"column":15},"generated":{"line":1,"column":138}},{"source":"../../src/interaction/interactiveTarget.js","name":"cursor","original":{"line":68,"column":20},"generated":{"line":1,"column":143}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":70,"column":4},"generated":{"line":1,"column":151}},{"source":"../../src/interaction/interactiveTarget.js","name":"value","original":{"line":70,"column":19},"generated":{"line":1,"column":166}},{"source":"../../src/interaction/interactiveTarget.js","name":"value","original":{"line":72,"column":12},"generated":{"line":1,"column":169}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":74,"column":12},"generated":{"line":1,"column":171}},{"source":"../../src/interaction/interactiveTarget.js","name":"cursor","original":{"line":74,"column":17},"generated":{"line":1,"column":176}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":74,"column":26},"generated":{"line":1,"column":183}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":76,"column":33},"generated":{"line":1,"column":193}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":76,"column":17},"generated":{"line":1,"column":205}},{"source":"../../src/interaction/interactiveTarget.js","name":"cursor","original":{"line":76,"column":22},"generated":{"line":1,"column":210}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":78,"column":12},"generated":{"line":1,"column":219}},{"source":"../../src/interaction/interactiveTarget.js","name":"cursor","original":{"line":78,"column":17},"generated":{"line":1,"column":224}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":78,"column":26},"generated":{"line":1,"column":231}},{"source":"../../src/interaction/interactiveTarget.js","name":"cursor","original":{"line":95,"column":4},"generated":{"line":1,"column":238}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":95,"column":12},"generated":{"line":1,"column":245}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":104,"column":4},"generated":{"line":1,"column":250}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":108,"column":8},"generated":{"line":1,"column":272}},{"source":"../../src/interaction/interactiveTarget.js","name":"undefined","original":{"line":106,"column":38},"generated":{"line":1,"column":284}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":106,"column":12},"generated":{"line":1,"column":288}},{"source":"../../src/interaction/interactiveTarget.js","name":"_trackedPointers","original":{"line":106,"column":17},"generated":{"line":1,"column":293}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":106,"column":49},"generated":{"line":1,"column":312}},{"source":"../../src/interaction/interactiveTarget.js","name":"_trackedPointers","original":{"line":106,"column":54},"generated":{"line":1,"column":317}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":106,"column":73},"generated":{"line":1,"column":334}},{"source":"../../src/interaction/interactiveTarget.js","name":null,"original":{"line":108,"column":15},"generated":{"line":1,"column":338}},{"source":"../../src/interaction/interactiveTarget.js","name":"_trackedPointers","original":{"line":108,"column":20},"generated":{"line":1,"column":343}},{"source":"../../src/interaction/interactiveTarget.js","name":"_trackedPointers","original":{"line":117,"column":4},"generated":{"line":1,"column":361}},{"source":"../../src/interaction/interactiveTarget.js","name":"undefined","original":{"line":117,"column":22},"generated":{"line":1,"column":383}}],"sources":{"../../src/interaction/interactiveTarget.js":"/**\n * Default property values of interactive objects\n * Used by {@link PIXI.interaction.InteractionManager} to automatically give all DisplayObjects these properties\n *\n * @private\n * @name interactiveTarget\n * @memberof PIXI.interaction\n * @example\n *      function MyObject() {}\n *\n *      Object.assign(\n *          core.DisplayObject.prototype,\n *          PIXI.interaction.interactiveTarget\n *      );\n */\nexport default {\n\n    /**\n     * Enable interaction events for the DisplayObject. Touch, pointer and mouse\n     * events will not be emitted unless `interactive` is set to `true`.\n     *\n     * @example\n     * const sprite = new PIXI.Sprite(texture);\n     * sprite.interactive = true;\n     * sprite.on('tap', (event) => {\n     *    //handle event\n     * });\n     * @member {boolean}\n     * @memberof PIXI.DisplayObject#\n     */\n    interactive: false,\n\n    /**\n     * Determines if the children to the displayObject can be clicked/touched\n     * Setting this to false allows PixiJS to bypass a recursive `hitTest` function\n     *\n     * @member {boolean}\n     * @memberof PIXI.Container#\n     */\n    interactiveChildren: true,\n\n    /**\n     * Interaction shape. Children will be hit first, then this shape will be checked.\n     * Setting this will cause this shape to be checked in hit tests rather than the displayObject's bounds.\n     *\n     * @example\n     * const sprite = new PIXI.Sprite(texture);\n     * sprite.interactive = true;\n     * sprite.hitArea = new PIXI.Rectangle(0, 0, 100, 100);\n     * @member {PIXI.Rectangle|PIXI.Circle|PIXI.Ellipse|PIXI.Polygon|PIXI.RoundedRectangle}\n     * @memberof PIXI.DisplayObject#\n     */\n    hitArea: null,\n\n    /**\n     * If enabled, the mouse cursor use the pointer behavior when hovered over the displayObject if it is interactive\n     * Setting this changes the 'cursor' property to `'pointer'`.\n     *\n     * @example\n     * const sprite = new PIXI.Sprite(texture);\n     * sprite.interactive = true;\n     * sprite.buttonMode = true;\n     * @member {boolean}\n     * @memberof PIXI.DisplayObject#\n     */\n    get buttonMode()\n    {\n        return this.cursor === 'pointer';\n    },\n    set buttonMode(value)\n    {\n        if (value)\n        {\n            this.cursor = 'pointer';\n        }\n        else if (this.cursor === 'pointer')\n        {\n            this.cursor = null;\n        }\n    },\n\n    /**\n     * This defines what cursor mode is used when the mouse cursor\n     * is hovered over the displayObject.\n     *\n     * @example\n     * const sprite = new PIXI.Sprite(texture);\n     * sprite.interactive = true;\n     * sprite.cursor = 'wait';\n     * @see https://developer.mozilla.org/en/docs/Web/CSS/cursor\n     *\n     * @member {string}\n     * @memberof PIXI.DisplayObject#\n     */\n    cursor: null,\n\n    /**\n     * Internal set of all active pointers, by identifier\n     *\n     * @member {Map<number, InteractionTrackingData>}\n     * @memberof PIXI.DisplayObject#\n     * @private\n     */\n    get trackedPointers()\n    {\n        if (this._trackedPointers === undefined) this._trackedPointers = {};\n\n        return this._trackedPointers;\n    },\n\n    /**\n     * Map of all tracked pointers, by identifier. Use trackedPointers to access.\n     *\n     * @private\n     * @type {Map<number, InteractionTrackingData>}\n     */\n    _trackedPointers: undefined,\n};\n"},"lineCount":null}},"error":null,"hash":"c221952cf32bd54fbced60ecc92841d8","cacheData":{"env":{}}}