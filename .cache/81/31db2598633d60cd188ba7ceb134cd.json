{"id":"GkT9","dependencies":[{"name":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\filters\\alpha\\AlphaFilter.js.map","includedInParent":true,"mtime":1674916213141},{"name":"C:\\Github\\Symphonic-AI\\package.json","includedInParent":true,"mtime":1724703272135},{"name":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\package.json","includedInParent":true,"mtime":1674916212608},{"name":"../../core","loc":{"line":7,"column":20,"index":629},"parent":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\filters\\alpha\\AlphaFilter.js","resolved":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\core\\index.js"},{"name":"path","loc":{"line":11,"column":20,"index":709},"parent":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\filters\\alpha\\AlphaFilter.js","resolved":"C:\\Github\\Symphonic-AI\\node_modules\\path-browserify\\index.js"}],"generated":{"js":"\"use strict\";exports.__esModule=!0;var e=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),t=require(\"../../core\"),r=o(t),n=require(\"path\");function o(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function a(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function u(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var l=function(t){function r(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;i(this,r);var n=a(this,t.call(this,\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",\"varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float uAlpha;\\n\\nvoid main(void)\\n{\\n   gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha;\\n}\\n\"));return n.alpha=e,n.glShaderKey=\"alpha\",n}return u(r,t),e(r,[{key:\"alpha\",get:function(){return this.uniforms.uAlpha},set:function(e){this.uniforms.uAlpha=e}}]),r}(r.Filter);exports.default=l;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":284}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":286}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":294}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"core","original":{"line":1,"column":12},"generated":{"line":1,"column":308}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":315}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":317}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":325}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"AlphaFilter","original":{"line":22,"column":21},"generated":{"line":1,"column":1062}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":27,"column":4},"generated":{"line":1,"column":1076}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":27,"column":4},"generated":{"line":1,"column":1085}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1089}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"alpha","original":{"line":27,"column":16},"generated":{"line":1,"column":1093}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1095}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1105}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1112}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1120}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1124}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1134}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1137}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1147}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":27,"column":24},"generated":{"line":1,"column":1150}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1152}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1154}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1159}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1162}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1166}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1168}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1170}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":1175}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":1177}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":1182}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":1187}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":1465}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1642}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":36,"column":8},"generated":{"line":1,"column":1649}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"alpha","original":{"line":36,"column":13},"generated":{"line":1,"column":1651}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"alpha","original":{"line":36,"column":21},"generated":{"line":1,"column":1657}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":37,"column":8},"generated":{"line":1,"column":1659}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"glShaderKey","original":{"line":37,"column":13},"generated":{"line":1,"column":1661}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":37,"column":27},"generated":{"line":1,"column":1673}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":1681}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":48,"column":8},"generated":{"line":1,"column":1730}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":48,"column":15},"generated":{"line":1,"column":1737}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"uniforms","original":{"line":48,"column":20},"generated":{"line":1,"column":1742}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"uAlpha","original":{"line":48,"column":29},"generated":{"line":1,"column":1751}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"value","original":{"line":51,"column":14},"generated":{"line":1,"column":1772}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":null,"original":{"line":53,"column":8},"generated":{"line":1,"column":1775}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"uniforms","original":{"line":53,"column":13},"generated":{"line":1,"column":1780}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"uAlpha","original":{"line":53,"column":22},"generated":{"line":1,"column":1789}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"value","original":{"line":53,"column":31},"generated":{"line":1,"column":1796}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"core","original":{"line":22,"column":41},"generated":{"line":1,"column":1805}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"Filter","original":{"line":22,"column":46},"generated":{"line":1,"column":1807}},{"source":"../../../src/filters/alpha/AlphaFilter.js","name":"AlphaFilter","original":{"line":22,"column":21},"generated":{"line":1,"column":1831}}],"sources":{"../../../src/filters/alpha/AlphaFilter.js":"import * as core from '../../core';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\n/**\n * Simplest filter - applies alpha\n *\n * Use this instead of Container's alpha property to avoid visual layering of individual elements.\n * AlphaFilter applies alpha evenly across the entire display object and any opaque elements it contains.\n * If elements are not opaque, they will blend with each other anyway.\n *\n * Very handy if you want to use common features of all filters:\n *\n * 1. Assign a blendMode to this filter, blend all elements inside display object with background.\n *\n * 2. To use clipping in display coordinates, assign a filterArea to the same container that has this filter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nexport default class AlphaFilter extends core.Filter\n{\n    /**\n     * @param {number} [alpha=1] Amount of alpha from 0 to 1, where 0 is transparent\n     */\n    constructor(alpha = 1.0)\n    {\n        super(\n            // vertex shader\n            readFileSync(join(__dirname, '../fragments/default.vert'), 'utf8'),\n            // fragment shader\n            readFileSync(join(__dirname, './alpha.frag'), 'utf8')\n        );\n\n        this.alpha = alpha;\n        this.glShaderKey = 'alpha';\n    }\n\n    /**\n     * Coefficient for alpha multiplication\n     *\n     * @member {number}\n     * @default 1\n     */\n    get alpha()\n    {\n        return this.uniforms.uAlpha;\n    }\n\n    set alpha(value) // eslint-disable-line require-jsdoc\n    {\n        this.uniforms.uAlpha = value;\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"b02057bf73e8f666037fa41f8009e45b","cacheData":{"env":{}}}