{"id":"DqsF","dependencies":[{"name":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\core\\autoDetectRenderer.js.map","includedInParent":true,"mtime":1674916212704},{"name":"C:\\Github\\Symphonic-AI\\package.json","includedInParent":true,"mtime":1724703272135},{"name":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\package.json","includedInParent":true,"mtime":1674916212608},{"name":"./utils","loc":{"line":6,"column":21,"index":113},"parent":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\core\\autoDetectRenderer.js","resolved":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\core\\utils\\index.js"},{"name":"./renderers/canvas/CanvasRenderer","loc":{"line":10,"column":30,"index":202},"parent":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\core\\autoDetectRenderer.js","resolved":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\core\\renderers\\canvas\\CanvasRenderer.js"},{"name":"./renderers/webgl/WebGLRenderer","loc":{"line":14,"column":29,"index":335},"parent":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\core\\autoDetectRenderer.js","resolved":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\core\\renderers\\webgl\\WebGLRenderer.js"}],"generated":{"js":"\"use strict\";exports.__esModule=!0,exports.autoDetectRenderer=d;var e=require(\"./utils\"),r=s(e),t=require(\"./renderers/canvas/CanvasRenderer\"),n=o(t),u=require(\"./renderers/webgl/WebGLRenderer\"),a=o(u);function o(e){return e&&e.__esModule?e:{default:e}}function s(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(r[t]=e[t]);return r.default=e,r}function d(e,t,u,o){var s=e&&e.forceCanvas;return void 0!==o&&(s=o),!s&&r.isWebGLSupported()?new a.default(e,t,u):new n.default(e,t,u)}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/core/autoDetectRenderer.js","name":"autoDetectRenderer","original":{"line":37,"column":16},"generated":{"line":1,"column":43}},{"source":"../../src/core/autoDetectRenderer.js","name":"autoDetectRenderer","original":{"line":37,"column":16},"generated":{"line":1,"column":62}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":64}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":68}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":70}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":78}},{"source":"../../src/core/autoDetectRenderer.js","name":"utils","original":{"line":1,"column":12},"generated":{"line":1,"column":89}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":96}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":98}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":106}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":150}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":152}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":160}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":37,"column":7},"generated":{"line":1,"column":406}},{"source":"../../src/core/autoDetectRenderer.js","name":"autoDetectRenderer","original":{"line":37,"column":16},"generated":{"line":1,"column":415}},{"source":"../../src/core/autoDetectRenderer.js","name":"options","original":{"line":37,"column":35},"generated":{"line":1,"column":417}},{"source":"../../src/core/autoDetectRenderer.js","name":"arg1","original":{"line":37,"column":44},"generated":{"line":1,"column":419}},{"source":"../../src/core/autoDetectRenderer.js","name":"arg2","original":{"line":37,"column":50},"generated":{"line":1,"column":421}},{"source":"../../src/core/autoDetectRenderer.js","name":"arg3","original":{"line":37,"column":56},"generated":{"line":1,"column":423}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":40,"column":4},"generated":{"line":1,"column":426}},{"source":"../../src/core/autoDetectRenderer.js","name":"forceCanvas","original":{"line":40,"column":8},"generated":{"line":1,"column":430}},{"source":"../../src/core/autoDetectRenderer.js","name":"options","original":{"line":40,"column":22},"generated":{"line":1,"column":432}},{"source":"../../src/core/autoDetectRenderer.js","name":"options","original":{"line":40,"column":33},"generated":{"line":1,"column":435}},{"source":"../../src/core/autoDetectRenderer.js","name":"forceCanvas","original":{"line":40,"column":41},"generated":{"line":1,"column":437}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":47,"column":4},"generated":{"line":1,"column":449}},{"source":"../../src/core/autoDetectRenderer.js","name":"undefined","original":{"line":42,"column":17},"generated":{"line":1,"column":461}},{"source":"../../src/core/autoDetectRenderer.js","name":"arg3","original":{"line":42,"column":8},"generated":{"line":1,"column":465}},{"source":"../../src/core/autoDetectRenderer.js","name":"forceCanvas","original":{"line":44,"column":8},"generated":{"line":1,"column":469}},{"source":"../../src/core/autoDetectRenderer.js","name":"arg3","original":{"line":44,"column":22},"generated":{"line":1,"column":471}},{"source":"../../src/core/autoDetectRenderer.js","name":"forceCanvas","original":{"line":47,"column":9},"generated":{"line":1,"column":475}},{"source":"../../src/core/autoDetectRenderer.js","name":"utils","original":{"line":47,"column":24},"generated":{"line":1,"column":478}},{"source":"../../src/core/autoDetectRenderer.js","name":"isWebGLSupported","original":{"line":47,"column":30},"generated":{"line":1,"column":480}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":49,"column":15},"generated":{"line":1,"column":499}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":49,"column":15},"generated":{"line":1,"column":503}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":49,"column":15},"generated":{"line":1,"column":505}},{"source":"../../src/core/autoDetectRenderer.js","name":"options","original":{"line":49,"column":33},"generated":{"line":1,"column":513}},{"source":"../../src/core/autoDetectRenderer.js","name":"arg1","original":{"line":49,"column":42},"generated":{"line":1,"column":515}},{"source":"../../src/core/autoDetectRenderer.js","name":"arg2","original":{"line":49,"column":48},"generated":{"line":1,"column":517}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":52,"column":11},"generated":{"line":1,"column":520}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":52,"column":11},"generated":{"line":1,"column":524}},{"source":"../../src/core/autoDetectRenderer.js","name":null,"original":{"line":52,"column":11},"generated":{"line":1,"column":526}},{"source":"../../src/core/autoDetectRenderer.js","name":"options","original":{"line":52,"column":30},"generated":{"line":1,"column":534}},{"source":"../../src/core/autoDetectRenderer.js","name":"arg1","original":{"line":52,"column":39},"generated":{"line":1,"column":536}},{"source":"../../src/core/autoDetectRenderer.js","name":"arg2","original":{"line":52,"column":45},"generated":{"line":1,"column":538}}],"sources":{"../../src/core/autoDetectRenderer.js":"import * as utils from './utils';\nimport CanvasRenderer from './renderers/canvas/CanvasRenderer';\nimport WebGLRenderer from './renderers/webgl/WebGLRenderer';\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * This helper function will automatically detect which renderer you should be using.\n * WebGL is the preferred renderer as it is a lot faster. If webGL is not supported by\n * the browser then this function will return a canvas renderer\n *\n * @memberof PIXI\n * @function autoDetectRenderer\n * @param {object} [options] - The optional renderer parameters\n * @param {number} [options.width=800] - the width of the renderers view\n * @param {number} [options.height=600] - the height of the renderers view\n * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n * @param {boolean} [options.antialias=false] - sets antialias (only applicable in chrome at the moment)\n * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation, enable this if you\n *  need to call toDataUrl on the webgl context\n * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n *  (shown if not transparent).\n * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n *   not before the new render pass.\n * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer, retina would be 2\n * @param {boolean} [options.forceCanvas=false] - prevents selection of WebGL renderer, even if such is present\n * @param {boolean} [options.roundPixels=false] - If true PixiJS will Math.floor() x/y values when rendering,\n *  stopping pixel interpolation.\n * @param {boolean} [options.forceFXAA=false] - forces FXAA antialiasing to be used over native.\n *  FXAA is faster, but may not always look as great **webgl only**\n * @param {boolean} [options.legacy=false] - `true` to ensure compatibility with older / less advanced devices.\n *  If you experience unexplained flickering try setting this to true. **webgl only**\n * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n *  for devices with dual graphics card **webgl only**\n * @return {PIXI.WebGLRenderer|PIXI.CanvasRenderer} Returns WebGL renderer if available, otherwise CanvasRenderer\n */\nexport function autoDetectRenderer(options, arg1, arg2, arg3)\n{\n    // Backward-compatible support for noWebGL option\n    let forceCanvas = options && options.forceCanvas;\n\n    if (arg3 !== undefined)\n    {\n        forceCanvas = arg3;\n    }\n\n    if (!forceCanvas && utils.isWebGLSupported())\n    {\n        return new WebGLRenderer(options, arg1, arg2);\n    }\n\n    return new CanvasRenderer(options, arg1, arg2);\n}\n"},"lineCount":null}},"error":null,"hash":"cfd0a110ccc5c27b3a20434d02b5e017","cacheData":{"env":{}}}