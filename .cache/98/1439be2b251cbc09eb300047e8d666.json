{"id":"jvu7","dependencies":[{"name":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\extract\\index.js.map","includedInParent":true,"mtime":1674916213109},{"name":"C:\\Github\\Symphonic-AI\\package.json","includedInParent":true,"mtime":1724703272135},{"name":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\package.json","includedInParent":true,"mtime":1674916212608},{"name":"./webgl/WebGLExtract","loc":{"line":5,"column":28,"index":71},"parent":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\extract\\index.js","resolved":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\extract\\webgl\\WebGLExtract.js"},{"name":"./canvas/CanvasExtract","loc":{"line":14,"column":29,"index":279},"parent":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\extract\\index.js","resolved":"C:\\Github\\Symphonic-AI\\node_modules\\pixi.js\\lib\\extract\\canvas\\CanvasExtract.js"}],"generated":{"js":"\"use strict\";exports.__esModule=!0;var e=require(\"./webgl/WebGLExtract\");Object.defineProperty(exports,\"webgl\",{enumerable:!0,get:function(){return t(e).default}});var r=require(\"./canvas/CanvasExtract\");function t(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(exports,\"canvas\",{enumerable:!0,get:function(){return t(r).default}});"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/extract/index.js","name":"default","original":{"line":21,"column":9},"generated":{"line":1,"column":153}},{"source":"../../src/extract/index.js","name":"default","original":{"line":22,"column":9},"generated":{"line":1,"column":336}}],"sources":{"../../src/extract/index.js":"/**\n * This namespace provides renderer-specific plugins for exporting content from a renderer.\n * For instance, these plugins can be used for saving an Image, Canvas element or for exporting the raw image data (pixels).\n *\n * Do not instantiate these plugins directly. It is available from the `renderer.plugins` property.\n * See {@link PIXI.CanvasRenderer#plugins} or {@link PIXI.WebGLRenderer#plugins}.\n * @example\n * // Create a new app (will auto-add extract plugin to renderer)\n * const app = new PIXI.Application();\n *\n * // Draw a red circle\n * const graphics = new PIXI.Graphics()\n *     .beginFill(0xFF0000)\n *     .drawCircle(0, 0, 50);\n *\n * // Render the graphics as an HTMLImageElement\n * const image = app.renderer.plugins.extract.image(graphics);\n * document.body.appendChild(image);\n * @namespace PIXI.extract\n */\nexport { default as webgl } from './webgl/WebGLExtract';\nexport { default as canvas } from './canvas/CanvasExtract';\n"},"lineCount":null}},"error":null,"hash":"d670ff7a87a4920acf6fcc9f63b78de6","cacheData":{"env":{}}}